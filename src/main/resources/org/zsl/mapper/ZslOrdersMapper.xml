<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zsl.mapper.ZslOrdersMapper">
  <resultMap id="BaseResultMap" type="org.zsl.po.ZslOrders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userId, number, createtime, note
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zsl_orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zsl_orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.zsl.po.ZslOrders">
    insert into zsl_orders (id, userId, number, 
      createtime, note)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{number,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=DATE}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.zsl.po.ZslOrders">
    insert into zsl_orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.zsl.po.ZslOrders">
    update zsl_orders
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=DATE},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zsl.po.ZslOrders">
    update zsl_orders
    set userId = #{userid,jdbcType=INTEGER},
      number = #{number,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=DATE},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--
    一对一，使用resultType，相对简单，继承主表，新增PO的增强类，要求sql查出的列名与po类相同
  -->
  <select id="selectOrdersWithUser" resultType="org.zsl.po.ZslOrdersCustom">
      select t.*,u.username,u.sex
      from zsl_orders t,zsl_user u
      where t.userId=u.id
  </select>
    <!--
     一对一，BaseResultMap，针对主表，需要加入属性，再次配置resultMap
   -->
  <resultMap extends="BaseResultMap" id="ResultMapWithUser" type="org.zsl.po.ZslOrders">
    <association property="zslUser" javaType="org.zsl.po.ZslUser">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="sex" jdbcType="VARCHAR" property="sex" />
        <result column="birthday" jdbcType="DATE" property="birthday" />
        <result column="address" jdbcType="VARCHAR" property="address" />
    </association>
  </resultMap>
    <select id="selectOrdersWithUserUsingResultMap" resultMap="ResultMapWithUser">
      select t.*,u.username,u.sex
      from zsl_orders t,zsl_user u
      where t.userId=u.id
  </select>
<!--==================================================================-->


</mapper>