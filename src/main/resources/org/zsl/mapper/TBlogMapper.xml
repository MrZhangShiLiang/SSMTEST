<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zsl.mapper.TBlogMapper">

  <resultMap id="BaseResultMap" type="org.zsl.po.TBlog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="keyword" jdbcType="VARCHAR" property="keyword" />
    <result column="images" jdbcType="VARCHAR" property="images" />
    <result column="clickNum" jdbcType="INTEGER" property="clicknum" />
    <result column="commentNum" jdbcType="INTEGER" property="commentnum" />
    <result column="agreeNum" jdbcType="INTEGER" property="agreenum" />
    <result column="isTop" jdbcType="INTEGER" property="istop" />
    <result column="isRecommend" jdbcType="INTEGER" property="isrecommend" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="addTime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.zsl.po.TBlog">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>

    <!--定义resultMap，用于一对一 一对多等查询
        也可以使用resultType，但是需要注意的是，在sql查出来的列需要与pojo实体类对应，一般是通过继承主表的实体类，然后添加所需属性
        resultMap：需要自己配置对应关系，里面使用association，其property为实体类里关联的对象属性，javaType为全路径名
    -->
  <resultMap extends="ResultMapWithBLOBs" id="ResultMapWithType" type="org.zsl.po.TBlog">
      <association property="tBlogtype" javaType="org.zsl.po.TBlogtype">
          <id column="id" property="id"/>
          <result column="typeName" property="typename"/>
          <result column="addTime" property="addtime"/>
          <result column="num" property="num"/>
      </association>
  </resultMap>

  <sql id="Base_Column_List">
    id, title, introduction, keyword, images, clickNum, commentNum, agreeNum, isTop, 
    isRecommend, updateTime, addTime, status, type_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_blog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_blog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.zsl.po.TBlog">
    insert into t_blog (id, title, introduction, 
      keyword, images, clickNum, 
      commentNum, agreeNum, isTop, 
      isRecommend, updateTime, addTime, 
      status, type_id, content
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, 
      #{keyword,jdbcType=VARCHAR}, #{images,jdbcType=VARCHAR}, #{clicknum,jdbcType=INTEGER}, 
      #{commentnum,jdbcType=INTEGER}, #{agreenum,jdbcType=INTEGER}, #{istop,jdbcType=INTEGER}, 
      #{isrecommend,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, #{addtime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.zsl.po.TBlog">
    insert into t_blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="keyword != null">
        keyword,
      </if>
      <if test="images != null">
        images,
      </if>
      <if test="clicknum != null">
        clickNum,
      </if>
      <if test="commentnum != null">
        commentNum,
      </if>
      <if test="agreenum != null">
        agreeNum,
      </if>
      <if test="istop != null">
        isTop,
      </if>
      <if test="isrecommend != null">
        isRecommend,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="addtime != null">
        addTime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="clicknum != null">
        #{clicknum,jdbcType=INTEGER},
      </if>
      <if test="commentnum != null">
        #{commentnum,jdbcType=INTEGER},
      </if>
      <if test="agreenum != null">
        #{agreenum,jdbcType=INTEGER},
      </if>
      <if test="istop != null">
        #{istop,jdbcType=INTEGER},
      </if>
      <if test="isrecommend != null">
        #{isrecommend,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.zsl.po.TBlog">
    update t_blog
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="clicknum != null">
        clickNum = #{clicknum,jdbcType=INTEGER},
      </if>
      <if test="commentnum != null">
        commentNum = #{commentnum,jdbcType=INTEGER},
      </if>
      <if test="agreenum != null">
        agreeNum = #{agreenum,jdbcType=INTEGER},
      </if>
      <if test="istop != null">
        isTop = #{istop,jdbcType=INTEGER},
      </if>
      <if test="isrecommend != null">
        isRecommend = #{isrecommend,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="addtime != null">
        addTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.zsl.po.TBlog">
    update t_blog
    set title = #{title,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      clickNum = #{clicknum,jdbcType=INTEGER},
      commentNum = #{commentnum,jdbcType=INTEGER},
      agreeNum = #{agreenum,jdbcType=INTEGER},
      isTop = #{istop,jdbcType=INTEGER},
      isRecommend = #{isrecommend,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      addTime = #{addtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zsl.po.TBlog">
    update t_blog
    set title = #{title,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      clickNum = #{clicknum,jdbcType=INTEGER},
      commentNum = #{commentnum,jdbcType=INTEGER},
      agreeNum = #{agreenum,jdbcType=INTEGER},
      isTop = #{istop,jdbcType=INTEGER},
      isRecommend = #{isrecommend,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      addTime = #{addtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--学习使用mybatis-->
    <select id="selectByTitle" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>,
        <include refid="Blob_Column_List"/>
        from t_blog
        where title like  #{title}

    </select>



    <select id="selectCountByTitle" parameterType="org.zsl.po.TBlogVo" resultType="int">
        select count(*) from t_blog where title like #{tBlog.title}
    </select>

    <select id="selectListByIds" parameterType="java.util.ArrayList" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>,
        <include refid="Blob_Column_List"/>
        from t_blog
        where id in
        <foreach collection="ids" open="(" separator="," close=")" item="id" >
            #{id}
        </foreach>
    </select>

    <!--学习使用一对一 、一对多查询-->
    <select id="selectBlogWithType" resultMap="ResultMapWithType">
        select t.*,s.typeName,s.num
        from t_blog t,t_blogtype s
        where t.type_id = s.id
    </select>
</mapper>